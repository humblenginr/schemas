{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Design Schema",
  "description": "Designs are your primary tool for collaborative authorship of your infrastructure, workflow, and processes.",
  "type": "object",
  "properties": {
    "name": {
      "type": "string",
      "description": "Name of the design; a descriptive, but concise title for the design document."
    },
    "schemaVersion": {
      "$ref": "../v1alpha2/core.json#/definitions/versionString",
      "description": "Specifies the version of the schema to which the design conforms."
    },
    "version": {
      "$ref": "../v1alpha2/core.json#/definitions/semverString",
      "description": "Revision of the design as expressed by an auto-incremented, SemVer-compliant version number. May be manually set by a user or third-party system, but will always be required to be of version number higher than the previously defined version number.",
      "minLength": 1,
      "maxLength": 50
    },
    "components": {
      "description": "Map of component instances to their corresponding component declarations",
      "additionalProperties": {
        "type": "string",
        "format": "uuid"
      },
      "type": "object",
      "allOf": [
        {
          "properties": {
            "configuration": {
              "$comment": "The configuration of the component. The configuration is based on the schema defined within the component definition.",
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            }
          }
        },
        {
          "$ref": "./component.json"
        }
      ]
    },
    "preferences": {
      "type": "object",
      "description": "Design-level preferences",
      "properties": {
        "layers": {
          "type": "array",
          "description": "List of available layers",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "layers"
      ]
    },
    "relationships": {
      "type": "array",
      "description": "List of relationships between components",
      "items": {
        "type": "object",
        "allOf": [
          {
            "$ref": "../v1alpha2/relationship.json"
          },
          {
            "properties": {
              "from": {
                "type": "string",
                "format": "uuid",
                "description": "ID (UUID) of the source component"
              },
              "to": {
                "type": "string",
                "format": "uuid",
                "description": "ID (UUID) of the target component"
              },
              "status": {
                "type": "string",
                "enum": [
                  "evaluating",
                  "valid",
                  "invalid"
                ],
                "description": "Status of the relationship"
              }
            },
            "required": [
              "from",
              "to",
              "status"
            ]
          }
        ]
      }
    }
  },
  "required": [
    "name",
    "schemaVersion",
    "version",
    "components",
    "relationships"
  ]
}